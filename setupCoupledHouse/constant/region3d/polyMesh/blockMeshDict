/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.1                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (0 5 0)		//0
    (20 5 0.1)		//1
    (25 5 0.125)	//2
    (40 5 0.2)		//3

    (0 10 0)	//4
    (20 10 0.1)	//5
    (25 10 0.125)	//6
    (40 10 0.2)	//7

    (0 15 0)		//8
    (20 15 0.1)		//9
    (25 15 0.125)	//10
    (40 15 0.2)		//11

    (0 5 4)		//12
    (20 5 4.1)		//13
    (25 5 4.125)	//14
    (40 5 4.2)		//15

    (0 10 4)	//16
    (20 10 4.1)	//17
    (25 10 4.125)	//18
    (40 10 4.2)	//19

    (0 15 4)		//20
    (20 15 4.1)		//21
    (25 15 4.125)	//22
    (40 15 4.2)		//23

    (0 0 0)		//24
    (20 0 0.1)		//25
    (25 0 0.125)	//26
    (40 0 0.2)		//27

    (0 0 4)		//28
    (20 0 4.1)		//29
    (25 0 4.125)	//30
    (40 0 4.2)		//31
);

blocks
(
 /*----------------------------------------
   Order of blocks:
   
                 left

         | 1-3 | 2-3 | 3-3 |
  front  | 1-2 |     | 3-2 |  back
         | 1-1 | 2-1 | 3-1 |

                 right
------------------------------------------- */

    // 1-2
    hex (0 1 5 4 12 13 17 16) (100 25 22) 
    simpleGrading 
    (
     1
     1  // y-grading 
     (
      (0.1 2 1.5)  // z-grading  
      (3.9 20 1)
     )
    ) 

    // 3-2
    hex (2 3 7 6 14 15 19 18) (75 25 22) 
    simpleGrading 
    (
     1
     1 
     (
      (0.1 2 1.5)  // z-grading  
      (3.9 20 1)
     )
    )

    // 1-3
    hex (4 5 9 8 16 17 21 20) (100 25 22) 
    simpleGrading 
    (
     1
     1
     (
      (0.1 2 1.5)  // z-grading  
      (3.9 20 1)
     )
    )

    // 2-3
    hex (5 6 10 9 17 18 22 21) (25 25 22) 
    simpleGrading 
    (
     1 
     1
     (
      (0.1 2 1.5)  // z-grading  
      (3.9 20 1)
     )
    )

    // 3-3
    hex (6 7 11 10 18 19 23 22) (75 25 22)
    simpleGrading 
    (
     1
     1
     (
      (0.1 2 1.5)  // z-grading  
      (3.9 20 1)
     )
    )

    // 1-1
    hex (24 25 1 0 28 29 13 12) (100 25 22) 
    simpleGrading 
    (
     1
     1
     (
      (0.1 2 1.5)  // z-grading  
      (3.9 20 1)
     )
    )

    // 2-1
    hex (25 26 2 1 29 30 14 13) (25 25 22) 
    simpleGrading 
    (
     1 
     1
     (
      (0.1 2 1.5)  // z-grading  
      (3.9 20 1)
     )
    )

    // 3-1
    hex (26 27 3 2 30 31 15 14) (75 25 22)
    simpleGrading 
    (
     1
     1
     (
      (0.1 2 1.5)  // z-grading  
      (3.9 20 1)
     )
    )
);

edges
(
);

boundary
(
    front
    {
        type patch;
        faces
        (
            (0 12 16 4)
            (4 16 20 8)
	    (24 28 12 0)
        );
    }
    back
    {
        type patch;
        faces
        (
            (7 19 15 3)
            (11 23 19 7)
	    (3 15 31 27)
        );
    }
    right
    {
        type patch;
        faces
        (
            (24 25 29 28)
            (25 26 30 29)
	    (26 27 31 30)
        );
    }
    left
    {
        type patch;
        faces
        (
            (8 20 21 9)
            (9 21 22 10)
            (10 22 23 11)
        );
    }

    houseFront
    {
        type wall;
        faces
        (
            (1 5 17 13)
        );
    }

    houseBack
    {
        type wall;
        faces
        (
            (2 14 18 6)
        );
    }

    houseLeft
    {
        type wall;
        faces
        (
            (5 6 18 17)
        );
    }

    houseRight
    {
        type wall;
        faces
        (
            (1 13 14 2)
        );
    }

    bottom
    {
        type wall;
        faces
        (
            (0 1 25 24)
	    (0 4 5 1)
	    (4 8 9 5)
	    (1 2 26 25)
	    (5 9 10 6)
	    (2 3 27 26)
	    (2 6 7 3)
	    (6 10 11 7)
        );
    }
    top
    {
        type patch;
        faces
        (
	    (12 13 29 28)
	    (12 16 17 13)
	    (16 20 21 17)
	    (13 14 30 29)
	    (17 21 22 18)
	    (14 15 31 30)
	    (14 18 19 15)
	    (18 22 23 19)
	);
    }

);

mergePatchPairs
(
);

// ************************************************************************* //
