// Parametrized windTunnel

//Run using:
//m4 -P blockMeshDict.m4 > blockMeshDict

//m4 definitions:





//Lengthes



//Heights



//Width


//Slope


//Bottom elevations

//m4_define(SIN, calc(S0 + IS1 * L1))
//m4_define(SOUT, calc(S0 - IS2 * L5))

//Top elevations

//m4_define(SINtop, calc(SIN + Height))
//m4_define(SOUTtop, calc(SOUT + Height))

//plane A


//plane B


//plane C 


//Numbers of cells in y- and z-direction



/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.7.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;

    root            "";
    case            "";
    instance        "";
    local           "";

    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices        
(
	// plane A
	(20 0 0) // Vertex A0 = 0 
	(20 0.1 0) // Vertex A1 = 1 
	(20 0 3.) // Vertex A2 = 2 
	(20 0.1 3.) // Vertex A3 = 3 
	
	// plane B
	(75 0 -3.055) // Vertex B0 = 4 
	(75 0.1 -3.055) // Vertex B1 = 5 
	(75 0 -0.055) // Vertex B2 = 6 
	(75 0.1 -0.055) // Vertex B3 = 7 
	(75 0 2.945) // Vertex B4 = 8 
	(75 0.1 2.945) // Vertex B5 = 9 
	
	// plane C
	(80 0 -3.06) // Vertex C0 = 10 
	(80 0.1 -3.06) // Vertex C1 = 11 
	(80 0 -0.06) // Vertex C2 = 12 
	(80 0.1 -0.06) // Vertex C3 = 13 
	(80 0 2.94) // Vertex C4 = 14 
	(80 0.1 2.94) // Vertex C5 = 15 
	
);

blocks          
(
    // Section A	
    hex (0 6 7 1 2 8 9 3) (550 1 300) simpleGrading (1 1 1)
    // Section B
    hex (6 12 13 7 8 14 15 9) (50 1 300) simpleGrading (1 1 1)
    // Section C
    hex (4 10 11 5 6 12 13 7) (50 1 300) simpleGrading (1 1 1)
);

edges           
(
);

patches         
(
	patch frontA
	(
	(0 2 3 1)	
	)

	patch frontC
	(
	(4 6 7 5)	
	)

	patch backB
	(
	(12 13 15 14)
	)

	patch backC
	(
	(10 11 13 12)
	)

	wall bottomA
	(
	(0 1 7 6)
	)

	patch bottomC
	(
	(4 5 11 10)
	)

	patch topA
	(
	(2 8 9 3)
	)

	patch topB
	(
	(8 14 15 9)
	)

	empty wallsAll
	(
	(0 6 8 2)
	(1 3 9 7)
	(6 12 14 8)
	(7 9 15 13)
	(4 10 12 6)
	(5 7 13 11)
	)

);

mergePatchPairs
(
);

// ************************************************************************* //
